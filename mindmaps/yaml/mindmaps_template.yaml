apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: "Mindmaps Template for Podium App"
  creationTimestamp: null
  name: mindmaps
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/vcs-ref: master
      app.openshift.io/vcs-uri: https://github.com/drichard/mindmaps.git
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mindmaps:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mindmaps\")].image"}]'
    creationTimestamp: "2020-05-13T12:13:16Z"
    generation: 2
    labels:
      app: mindmaps
      app.kubernetes.io/component: mindmaps
      app.kubernetes.io/instance: mindmaps
      app.kubernetes.io/part-of: mindmaps
    name: mindmaps
    namespace: ${NAMESPACE}${GUID}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mindmaps
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mindmaps
          deploymentconfig: mindmaps
      spec:
        containers:
                - image: quay.io/podium/mindmaps:latest
          imagePullPolicy: Always
          name: mindmaps
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/vcs-ref: master
      app.openshift.io/vcs-uri: https://github.com/drichard/mindmaps.git
    labels:
      app: mindmaps
      app.kubernetes.io/component: mindmaps
      app.kubernetes.io/instance: mindmaps
      app.kubernetes.io/part-of: mindmaps
    name: mindmaps
    namespace: ${NAMESPACE}${GUID}
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: mindmaps
      deploymentconfig: mindmaps
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: mindmaps
      app.kubernetes.io/component: mindmaps
      app.kubernetes.io/instance: mindmaps
      app.kubernetes.io/part-of: mindmaps
    name: mindmaps
    namespace: ${NAMESPACE}${GUID}
  spec:
    host: mindmaps-${NAMESPACE}${GUID}.${APPLICATION_DOMAIN}
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: mindmaps
      weight: 100
    wildcardPolicy: None
parameters:
  - name: NAMESPACE
    displayName: Application Name
    description: the name and label for all components
    value: podium
    required: true 
  - name: GUID
    displayName: Application GUID
    description: the GUID name component for the individual instance in a series of application deployments, typically a dash followed by a 4 character string like -f3ax
    required: false
  - name: APPLICATION_DOMAIN
    displayName: Application Domain
    description: Application domain name used in route to service
    value: apps.cloud.example.com
    required: true
