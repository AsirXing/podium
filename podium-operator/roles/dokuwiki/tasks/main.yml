---
- name: Deploy Dokuwiki ConfigMap
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dokuwiki-config
        namespace: "{{ meta.namespace }}"
      data:
        dokuwiki-acl: |
          # Don't modify the lines above
          #
          # Access Control Lists
          #
          # If your auth backend allows special char like spaces in groups
          # or user names you need to urlencode them (only chars <128, leave
          # UTF-8 multibyte chars as is)
          #
          # none   0
          # read   1
          # edit   2
          # create 4
          # upload 8
          # delete 16

          *               @ALL        {{ dokuwiki.default_acl }}
        dokuwiki-conf: |
          <?php
          $conf['plugin']['gitbacked']['pushAfterCommit'] = {{ dokuwiki.enable_git_push_integer }};
          $conf['plugin']['gitbacked']['commitPageMsg'] = 'DokuWiki %user% changed %page%: %summary%';
          $conf['plugin']['gitbacked']['periodicPull'] = 1;
          $conf['plugin']['gitbacked']['periodicMinutes'] = 60;
          $conf['plugin']['gitbacked']['repoPath'] = './data/gitrepo/';
          $conf['plugin']['gitbacked']['repoWorkDir'] = './data/gitrepo/';
          $conf['datadir'] = './data/gitrepo/docs/wiki/pages';
          $conf['mediadir'] = './data/gitrepo/docs/wiki/media';
          $conf['useacl'] = 1;
          $conf['superuser'] = 'admin';
        dokuwiki-users: |
          # users.auth.php
          # <?php exit()?>
          # Don't modify the lines above
          #
          # Format:
          #
          # login:passwordhash:Real Name:email:groups,comma,separated

          admin:{{ dokuwiki.admin_password_hash }}:Podium-Admin:admin@example.com:
- name: Deploy Dokuwiki persistent volume
  k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        namespace: "{{ meta.namespace }}"
        name: dokuwiki-repodata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
- name: Deploy dokuwiki
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: dokuwiki
        namespace: "{{ meta.namespace }}"
        labels:
          app: "{{dokuwiki.application_name}}"
      spec:
        replicas: 1
        strategy:
          type: RollingUpdate
        selector:
          matchLabels:
            app: "{{dokuwiki.application_name}}"
        template:
          metadata:
            labels:
              app: "{{dokuwiki.application_name}}"
              name: dokuwiki
          spec:
            containers:
            - image: quay.io/ktenzer/dokuwiki:latest
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 3
                successThreshold: 1
                timeoutSeconds: 1
              name: dokuwiki
              ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8443
                protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 3
                successThreshold: 1
                timeoutSeconds: 60
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /opt/app-root/src/conf/users.auth.php
                name: dokuwiki-config
                subPath: users.auth.php
              - mountPath: /opt/app-root/src/conf/acl.auth.php
                name: dokuwiki-config
                subPath: acl.auth.php
              - mountPath: /opt/app-root/src/conf/local.php
                name: dokuwiki-config
                subPath: local.php
              - mountPath: /opt/app-root/src/data/gitrepo
                name: repodata
            dnsPolicy: ClusterFirst
            initContainers:
            - command:
              - sh
              - -c
              - grep {{ dokuwiki.repo_url }} /opt/app-root/src/data/gitrepo/.git/config
                && exit 0; rm -fr /opt/app-root/src/data/gitrepo/*; rm -fr /opt/app-root/src/data/gitrepo/.??*;
                git clone {{ dokuwiki.repo_url }} /opt/app-root/src/data/gitrepo;
                git config -f /opt/app-root/src/data/gitrepo/.git/config  user.email "robot@example.com";
                git config -f /opt/app-root/src/data/gitrepo/.git/config  user.name "Podium-Robot";
                mkdir -p /opt/app-root/src/data/gitrepo/docs/wiki/media/; mkdir -p /opt/app-root/src/data/gitrepo/docs/wiki/pages/;
                ln -sf ../../../../../data/media/wiki/ /opt/app-root/src/data/gitrepo/docs/wiki/media/wiki;
                ln -sf ../../../../../data/pages/wiki/ /opt/app-root/src/data/gitrepo/docs/wiki/pages/wiki;
              image: rhscl/s2i-base-rhel7
              imagePullPolicy: Always
              name: clone-github-repo
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /opt/app-root/src/data/gitrepo
                name: repodata
            restartPolicy: Always
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
            volumes:
            - configMap:
                defaultMode: 420
                items:
                - key: dokuwiki-conf
                  path: local.php
                - key: dokuwiki-users
                  path: users.auth.php
                - key: dokuwiki-acl
                  path: acl.auth.php
                name: dokuwiki-config
              name: dokuwiki-config
            - name: repodata
              persistentVolumeClaim:
                claimName: dokuwiki-repodata
        triggers:
        - type: ConfigChange
      status: {}
- name: Deploy dokuwiki service
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ meta.namespace }}"
        labels:
          app: "{{dokuwiki.application_name}}"
        name: dokuwiki
      spec:
        ports:
        - port: 8080
          targetPort: 8080
        selector:
          app: "{{dokuwiki.application_name}}"
          name: dokuwiki
      status:
        loadBalancer: {}
- name: Deploy dokuwiki route
  k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        namespace: "{{ meta.namespace }}"
        annotations:
          openshift.io/host.generated: "true"
          kubernetes.io/tls-acme: "true"
        name: dokuwiki
      spec:
        host: "dokuwiki-{{ meta.namespace }}.{{application_domain}}"
        port:
          targetPort: 8080
        tls:
          termination: edge
        to:
          kind: Service
          name: dokuwiki
          weight: 100
        wildcardPolicy: None
  when: lets_encrypt
- name: Deploy dokuwiki route
  k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        namespace: "{{ meta.namespace }}"
        annotations:
          openshift.io/host.generated: "true"
        name: dokuwiki
      spec:
        host: "dokuwiki-{{ meta.namespace }}.{{application_domain}}"
        port:
          targetPort: 8080
        tls:
          termination: edge
        to:
          kind: Service
          name: dokuwiki
          weight: 100
        wildcardPolicy: None
  when: not lets_encrypt
