---
- name: Deploy Wekan Mongodb Secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: mongodb
        namespace: "{{ namespace }}"
      stringData:
        database-admin-password: "{{ wekan.mongo_admin_password }}"
        database-name: "{{ wekan.mongo_database_name }}"
        database-password: "{{ wekan.mongo_database_password }}"
        database-user: "{{ wekan.mongo_database_user }}"
- name: Deploy Wekan persistent volume
  k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        namespace: "{{ namespace }}"
        name: mongodb
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
- name: Deploy wekan mongodb service
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ namespace }}"
        labels:
          app: "{{wekan.application_name}}"
        name: mongodb
      spec:
        ports:
        - port: 27017
          targetPort: 27017
        selector:
          app: "{{wekan.application_name}}"
          name: mongodb
      status:
        loadBalancer: {}
- name: Deploy Wekan Mongodb
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: mongodb
        namespace: "{{ namespace }}"
        labels:
          app: "{{wekan.application_name}}"
      spec:
        replicas: 1
        strategy:
          type: RollingUpdate
        selector:
          matchLabels:
            app: "{{wekan.application_name}}"
        template:
          metadata:
            labels:
              app: "{{wekan.application_name}}"
              name: mongodb
          spec:
            containers:
            - env:
              - name: MONGODB_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: mongodb
              - name: MONGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: mongodb
              - name: MONGODB_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-admin-password
                    name: mongodb
              - name: MONGODB_DATABASE
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: mongodb
              image: registry.redhat.io/rhscl/mongodb-36-rhel7
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 27017
                timeoutSeconds: 1
              name: mongodb
              ports:
              - containerPort: 27017
                protocol: TCP
              readinessProbe:
                exec:
                  command:
                  - /bin/sh
                  - -i
                  - -c
                  - mongo 127.0.0.1:27017/{{ wekan.mongo_database_name }} -u {{ wekan.mongo_database_user }} -p {{ wekan.mongo_database_password }}
                    --eval="quit()"
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /var/lib/mongodb/data
                name: mongodb-data
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
            volumes:
            - name: mongodb-data
              persistentVolumeClaim:
                claimName: mongodb
        triggers:
        - type: ConfigChange
- name: Deploy Wekan Service Account
  k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: wekan
        namespace: "{{ namespace }}"
        labels:
          app: "{{wekan.application_name}}"
- name: Deploy Wekan
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: wekan
        namespace: "{{ namespace }}"
        labels:
          app: "{{wekan.application_name}}"
      spec:
        replicas: 1
        strategy:
          type: RollingUpdate
        selector:
          matchLabels:
            app: "{{wekan.application_name}}"
        template:
          metadata:
            labels:
              app: "{{wekan.application_name}}"
              name: wekan
          spec:
            containers:
            - env:
              - name: MONGO_URL
                value: mongodb://{{ wekan.mongo_database_user }}:{{ wekan.mongo_database_password }}@mongodb:27017/{{ wekan.mongo_database_name }}
              - name: ROOT_URL
                value: https://wekan-{{ namespace }}.{{ application_domain }}/
              - name: PORT
                value: "8080"
              image: wekanteam/wekan:latest
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 30
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 240
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              name: wekan
              ports:
              - containerPort: 8080
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            serviceAccount: wekan
            serviceAccountName: wekan
            terminationGracePeriodSeconds: 30
        triggers:
        - type: ConfigChange
- name: Deploy wekan service
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ namespace }}"
        labels:
          app: "{{wekan.application_name}}"
        name: wekan
      spec:
        ports:
        - port: 8080
          targetPort: 8080
        selector:
          app: "{{wekan.application_name}}"
          name: wekan
      status:
        loadBalancer: {}
- name: Deploy wekan route
  k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        namespace: "{{ namespace }}"
        annotations:
          openshift.io/host.generated: "true"
          kubernetes.io/tls-acme: "true"
        name: wekan
      spec:
        host: "wekan-{{namespace}}.{{application_domain}}"
        port:
          targetPort: 8080
        tls:
          termination: edge
        to:
          kind: Service
          name: wekan
          weight: 100
        wildcardPolicy: None
  when: lets_encrypt
- name: Deploy wekan route
  k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        namespace: "{{ namespace }}"
        annotations:
          openshift.io/host.generated: "true"
        name: wekan
      spec:
        host: "wekan-{{namespace}}.{{application_domain}}"
        port:
          targetPort: 8080
        tls:
          termination: edge
        to:
          kind: Service
          name: wekan
          weight: 100
        wildcardPolicy: None
  when: not lets_encrypt
